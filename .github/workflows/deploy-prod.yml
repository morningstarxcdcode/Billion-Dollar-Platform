name: Production Deployment

on:
  push:
    tags:
      - 'v*'

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
    - uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Registry
      uses: docker/login-action@v2
      with:
        registry: ${{ secrets.DOCKER_REGISTRY }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract version
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

    - name: Build and push backend
      uses: docker/build-push-action@v4
      with:
        context: ./my-express-app
        push: true
        tags: ${{ secrets.DOCKER_REGISTRY }}/billion-dollar-backend:${{ env.VERSION }}
        cache-from: type=registry,ref=${{ secrets.DOCKER_REGISTRY }}/billion-dollar-backend:buildcache
        cache-to: type=registry,ref=${{ secrets.DOCKER_REGISTRY }}/billion-dollar-backend:buildcache,mode=max

    - name: Build and push frontend
      uses: docker/build-push-action@v4
      with:
        context: ./frontend
        push: true
        tags: ${{ secrets.DOCKER_REGISTRY }}/billion-dollar-frontend:${{ env.VERSION }}
        cache-from: type=registry,ref=${{ secrets.DOCKER_REGISTRY }}/billion-dollar-frontend:buildcache
        cache-to: type=registry,ref=${{ secrets.DOCKER_REGISTRY }}/billion-dollar-frontend:buildcache,mode=max

    - name: Deploy to Production Server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.PROD_HOST }}
        username: ${{ secrets.PROD_USERNAME }}
        key: ${{ secrets.PROD_SSH_KEY }}
        script: |
          cd /opt/billion-dollar-platform
          echo "TAG=${{ env.VERSION }}" > .env
          echo "DOCKER_REGISTRY=${{ secrets.DOCKER_REGISTRY }}" >> .env
          echo "DOMAIN=${{ secrets.PROD_DOMAIN }}" >> .env
          echo "MONGO_USER=${{ secrets.MONGO_USER }}" >> .env
          echo "MONGO_PASSWORD=${{ secrets.MONGO_PASSWORD }}" >> .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
          docker-compose -f docker-compose.prod.yml pull
          docker-compose -f docker-compose.prod.yml up -d
          docker system prune -f

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        name: Release ${{ env.VERSION }}
        generate_release_notes: true